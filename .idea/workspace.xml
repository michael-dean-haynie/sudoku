<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SPLITTER_PROPORTION" value="0.30283353" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="sudoku" targetName="app" />
      <config projectName="sudoku" targetName="tests" />
      <config projectName="sudoku" targetName="gtest_main" />
      <config projectName="sudoku" targetName="gmock_main" />
      <config projectName="sudoku" targetName="gtest" />
      <config projectName="sudoku" targetName="applibs" />
      <config projectName="sudoku" targetName="gmock" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" GENERATION_DIR="build" CONFIG_NAME="Debug" NO_GENERATOR="true" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="147a7656-a14b-499a-bb7d-7cec7f41d0f6" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/progress-event/progress-event.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/progress-event/progress-event.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/helpers/assertion-helpers.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/test/helpers/assertion-helpers.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/helpers/assertion-helpers.h" beforeDir="false" afterPath="$PROJECT_DIR$/test/helpers/assertion-helpers.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/strategies/naked-single_test.cc" beforeDir="false" afterPath="$PROJECT_DIR$/test/strategies/naked-single_test.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/strategies/no-duplicates_test.cc" beforeDir="false" afterPath="$PROJECT_DIR$/test/strategies/no-duplicates_test.cc" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="NamedScopeManager">
    <scope name="src and test" pattern="file[sudoku]:src//*||file[sudoku]:test//*" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2022" />
    <option name="minorVersion" value="2.1" />
  </component>
  <component name="ProjectId" id="2DaaE4m8rDoSjgYGHVj9bNQjeCV" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.advertisement.text.has.clang-format": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "last_opened_file_path": "/Users/michael/code/mine/sudoku/test/unit",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "preferences.keymap"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/test/unit" />
    </key>
  </component>
  <component name="RunManager" selected="Google Test.tests">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in naked-single_test.cc" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="tests" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="tests" TEST_PATTERN="all-tests(file://$PROJECT_DIR$/test/strategies/naked-single_test.cc)" TEST_MODE="PATTERN">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HiddenSingleTests.ShouldReturnNullIfCellDoesNotHaveHiddenSingle" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="tests" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="tests" TEST_CLASS="HiddenSingleTests" TEST_METHOD="ShouldReturnNullIfCellDoesNotHaveHiddenSingle" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HiddenSingleTests.ShouldReturnProgressEventIfCellIsHasHiddenSingleForBlock" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="tests" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="tests" TEST_CLASS="HiddenSingleTests" TEST_METHOD="ShouldReturnProgressEventIfCellIsHasHiddenSingleForBlock" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HiddenSingleTests.ShouldReturnProgressEventIfCellIsHasHiddenSingleForCollumn" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="tests" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="tests" TEST_CLASS="HiddenSingleTests" TEST_METHOD="ShouldReturnProgressEventIfCellIsHasHiddenSingleForCollumn" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Playground.Playground1" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" temporary="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="tests" TEST_CLASS="Playground" TEST_METHOD="Playground1" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="tests" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Debug Easy Puzzle" type="CMakeRunConfiguration" factoryName="Application" folderName="Custom" REDIRECT_INPUT="true" REDIRECT_INPUT_PATH="$PROJECT_DIR$/input/sudoku.txt" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Debug Hard Puzzle" type="CMakeRunConfiguration" factoryName="Application" folderName="Custom" REDIRECT_INPUT="true" REDIRECT_INPUT_PATH="$PROJECT_DIR$/input/sudoku-hard.txt" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="sudoku" RUN_TARGET_NAME="app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="applibs" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="applibs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="gmock" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="gmock_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="sudoku" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run Easy Puzzle (Slow)" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="clear &amp;&amp; build/src/app --slow &lt; input/sudoku.txt" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="/bin/zsh" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="false" />
      <option name="EXECUTE_SCRIPT_FILE" value="false" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="Run Hard Puzzle (Slow)" type="ShConfigurationType">
      <option name="SCRIPT_TEXT" value="clear &amp;&amp; build/src/app --slow &lt; input/sudoku-hard.txt" />
      <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
      <option name="SCRIPT_PATH" value="" />
      <option name="SCRIPT_OPTIONS" value="" />
      <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
      <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
      <option name="INTERPRETER_PATH" value="/bin/zsh" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="EXECUTE_IN_TERMINAL" value="false" />
      <option name="EXECUTE_SCRIPT_FILE" value="false" />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="CMake Application.Debug Easy Puzzle" />
      <item itemvalue="CMake Application.Debug Hard Puzzle" />
      <item itemvalue="CMake Application.gmock" />
      <item itemvalue="CMake Application.gmock_main" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.app" />
      <item itemvalue="CMake Application.applibs" />
      <item itemvalue="Google Test.tests" />
      <item itemvalue="Google Test.All in naked-single_test.cc" />
      <item itemvalue="Google Test.Playground.Playground1" />
      <item itemvalue="Google Test.HiddenSingleTests.ShouldReturnNullIfCellDoesNotHaveHiddenSingle" />
      <item itemvalue="Google Test.HiddenSingleTests.ShouldReturnProgressEventIfCellIsHasHiddenSingleForBlock" />
      <item itemvalue="Google Test.HiddenSingleTests.ShouldReturnProgressEventIfCellIsHasHiddenSingleForCollumn" />
      <item itemvalue="Shell Script.Run Easy Puzzle (Slow)" />
      <item itemvalue="Shell Script.Run Hard Puzzle (Slow)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Google Test.Playground.Playground1" />
        <item itemvalue="Google Test.All in naked-single_test.cc" />
        <item itemvalue="Google Test.HiddenSingleTests.ShouldReturnNullIfCellDoesNotHaveHiddenSingle" />
        <item itemvalue="Google Test.HiddenSingleTests.ShouldReturnProgressEventIfCellIsHasHiddenSingleForBlock" />
        <item itemvalue="Google Test.HiddenSingleTests.ShouldReturnProgressEventIfCellIsHasHiddenSingleForCollumn" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="147a7656-a14b-499a-bb7d-7cec7f41d0f6" name="Changes" comment="" />
      <created>1660939533901</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1660939533901</updated>
      <workItem from="1660939537816" duration="8903000" />
      <workItem from="1660948529932" duration="5000" />
      <workItem from="1660948539905" duration="81000" />
      <workItem from="1660948629724" duration="1922000" />
      <workItem from="1660950563791" duration="1174000" />
      <workItem from="1660952961743" duration="436000" />
      <workItem from="1660953494243" duration="1642000" />
      <workItem from="1660956169355" duration="2013000" />
      <workItem from="1660958421496" duration="41616000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>